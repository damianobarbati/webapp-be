version: '3.7'

services:
    app:
        image: ${IMAGE:?}
        container_name: ${IMAGE:?}
        build:
            context: .
            dockerfile: ./Dockerfile
            args:
                - NODE_ENV=${NODE_ENV:?}
        environment:
            - NODE_ENV=${NODE_ENV:?}
        volumes:
            - ${APP_VOLUME:-./:/opt}
        ports:
            - 80:80
        restart: unless-stopped
        healthcheck:
            test: curl --fail --max-time 1 http://localhost
            start_period: 5s
            interval: 30s
            retries: 1

    db:
        image: postgres:13-alpine
        container_name: ${IMAGE:?}-db
        environment:
            - POSTGRES_USER=${PGUSER:?}
            - POSTGRES_PASSWORD=${PGPASSWORD:?}
            - POSTGRES_DB=${PGDATABASE:?}
        volumes:
            - ./database:/docker-entrypoint-initdb.d
            - ./pg-data:/var/lib/postgresql/data
        ports:
            - 5432:5432
        restart: unless-stopped
        # https://pgtune.leopard.in.ua/#/
        command: -c 'max_connections=20' -c 'shared_buffers=1536MB' -c 'effective_cache_size=4608MB' -c 'maintenance_work_mem=768MB' -c 'checkpoint_completion_target=0.9' -c 'wal_buffers=16MB' -c 'default_statistics_target=500' -c 'random_page_cost=1.1' -c 'effective_io_concurrency=200' -c 'work_mem=19660kB' -c 'min_wal_size=4GB' -c 'max_wal_size=8GB' -c 'log_statement=all' -c 'log_destination=stderr'
        healthcheck:
            test: pg_isready --dbname ${PGDATABASE:?}
            start_period: 30s
            interval: 10s
            timeout: 5s
            retries: 3
